FROM python:3.11-alpine AS base

WORKDIR /app

COPY requirements.txt .

# Create a new user and assign permission
RUN adduser --disabled-password appuser && \
    chown -R appuser:appuser /app

# 创建日志目录并更改权限
RUN mkdir -p /app/logs && \
    chown -R appuser:appuser /app/logs

RUN apk add --no-cache gcc musl-dev libffi-dev g++ cmake make build-base
# RUN pip install --upgrade setuptools wheel

RUN pip install --no-cache-dir -r requirements.txt

FROM base AS final

COPY src .

USER appuser

ENV PORT=${PORT:-5000}
ENV LOG_LEVEL=${LOG_LEVEL:-info}

CMD ["python3", "main.py", "--port", "$PORT"]
# CMD python3 main.py >> /app/app.log 2>&1 &  --port $PORT --log-level $LOG_LEVEL



docker run -d -p 5000:5000 --name vur_container --user root vur_image /bin/sh -c "chown -R appuser:appuser /app/logs && chmod -R 777 /app/logs && su appuser -c 'python3 main.py --port $PORT'"


===================0002

FROM python:3.11-alpine AS base

WORKDIR /app

COPY requirements.txt .

RUN apk add --no-cache gcc musl-dev libffi-dev g++ cmake make build-base

RUN pip install --no-cache-dir -r requirements.txt

# 创建新用户并分配权限
RUN adduser --disabled-password appuser && \
    mkdir -p /app/logs && \
    chown -R appuser:appuser /app && \
    chmod -R 777 /app/logs

FROM base AS final

COPY src .

USER appuser

ENV PORT=${PORT:-5000}
ENV LOG_LEVEL=${LOG_LEVEL:-info}

CMD ["python3", "main.py", "--port", "$PORT"]




